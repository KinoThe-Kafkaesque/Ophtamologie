application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName pathogene
    blueprints []
    buildTool maven
    cacheProvider no
    clientFramework vue
    clientPackageManager npm
    clientTheme lux
    clientThemeVariant dark
    creationTimestamp 1649976249917
    databaseType sql
    devDatabaseType mysql
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache false
    enableSwaggerCodegen false
    enableTranslation false
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.8.1"
    jwtSecretKey "N2EwNDVhNzA1NGExZDY0ZjcyY2ZiNDQyZjc0ZjMwYWRjY2Q4YzllMWQzNjExYThhOTBjNWNjYTAzZTc1ZjRjODM0YTE5NTM5ZjVmZjU1ODdiOWI0MTRkZGJlY2IxYTg2N2RlNmQ5ZjE1MDI0NmMzNDZlMTZhNjg0OWI3MDY2NmQ="
    languages [en, fr]
    messageBroker false
    nativeLanguage fr
    otherModules []
    packageName emsi.iir4.pathogene
    prodDatabaseType mysql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType eureka
    skipClient true
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities Classification, Detection, Image, Maladie, Medecin, Patient, RendezVous, Secretaire, Stade, Unclassified, Visite
}

entity Classification {
  code String unique
  score Boolean
}
entity Detection {
  photo ImageBlob
  code String unique
  validation Boolean
  stade String
  date ZonedDateTime
  description String
}
entity Image {
  code String unique
  photo ImageBlob
}
entity Maladie {
  code String unique
  nom String unique
}
entity Medecin {
  code String unique
  nom String
  numEmp String
  prenom String
  expertLevel Integer
  photo ImageBlob
  type String
  nbrPatients Integer
  rating Integer
  description TextBlob
}
entity Patient {
  code String unique
  nom String
  prenom String
  dateNaissance LocalDate
  adresse String
  genre Genre
  telephone String
  poids Double
  taille Double
  photo ImageBlob
}
entity RendezVous {
  date ZonedDateTime
  code String unique
  status String
}
entity Secretaire {
  code String unique
  nom String
  numEmp String
  prenom String
  admin Boolean
  photo ImageBlob
}
entity Stade {
  code String unique
  level String
  description String
}
entity Unclassified {
  code String unique
  photo ImageBlob
}
entity Visite {
  code String unique
  date LocalDate
}
enum Genre {
  Homme,
  Femme
}

relationship OneToOne {
  Compte{user} to User
  Detection{maladie} to Maladie{detection}
  Medecin{user} to User
  Patient{user} to User
  Secretaire{user} to User
  Visite{rendezVous} to RendezVous{visite}
  Visite{detection} to Detection{visite}
}
relationship OneToMany {
  Medecin{classification} to Classification{medecin}
  Stade{classification} to Classification{stade}
  Unclassified{classification} to Classification{unclassified}
  Patient{detection} to Detection{patient}
  Stade{image} to Image{stade}
  Secretaire{medecin} to Medecin{secretaire}
  Secretaire{patient} to Patient{secretaire}
  Stade{patient} to Patient{stade}
  Patient{rendezVous} to RendezVous{patient}
  Medecin{rendezVous} to RendezVous{medecin}
  Maladie{stade} to Stade{maladie}
  Maladie{unclassified} to Unclassified{maladie}
}

